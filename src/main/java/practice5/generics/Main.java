package practice5.generics;
/*
Обобщённый класс: Создайте класс Storage<T>, который хранит элемент и возвращает его.
Обобщённый метод: Реализуйте метод printList(List<?>), который принимает список любого типа и выводит его элементы.
Работа с числами: Создайте класс NumberBox<T extends Number>, который хранит только числа и возвращает их сумму.
Ограничение сверху: Напишите обобщённый метод, который принимает List<? extends Number> и вычисляет сумму элементов.
Ограничение снизу: Реализуйте метод, который принимает List<? super Integer> и добавляет в него несколько чисел.
Обобщённый интерфейс: Создайте интерфейс Container<T>, содержащий методы add(T item) и get().
Коллекция с обобщёнными типами: Создайте Map<K, V> и реализуйте метод, который принимает обобщённые ключи и значения, а затем выводит их.
Сортировка с Comparable<T>: Напишите класс Box<T extends Comparable<T>>, который хранит объект и умеет сравнивать его с другим.
Использование нескольких параметров типа: Реализуйте обобщённый класс Pair<K, V>, который хранит пару значений разного типа.
 */
public class Main {
}
