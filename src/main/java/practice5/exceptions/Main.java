package practice5.exceptions;
/*
Обработка файла: Напишите метод, который читает файл и обрабатывает FileNotFoundException и IOException.
Проверка ввода: Создайте собственное исключение InvalidInputException, которое выбрасывается при вводе некорректного значения (например, отрицательного числа).
Безопасное деление: Реализуйте метод деления чисел с обработкой ArithmeticException, если происходит деление на ноль.
Массив и выход за границы: Напишите программу, которая запрашивает у пользователя индекс массива и обрабатывает ArrayIndexOutOfBoundsException.
Цепочка исключений: Создайте метод, который выбрасывает одно исключение, но перехватывает его и выбрасывает другое (Exception Chaining).
Работа с несколькими catch: Напишите метод, который вызывает несколько исключений (NullPointerException, ArithmeticException, NumberFormatException) и обрабатывает их разными catch.
Попытка преобразования строки в число: Реализуйте метод, который принимает строку и преобразует её в число, обрабатывая NumberFormatException.
Обязательное закрытие ресурсов: Напишите метод, который открывает файл и читает данные, используя try-with-resources, чтобы гарантированно закрывать ресурс.
Запрос ввода у пользователя: Реализуйте метод, который запрашивает у пользователя число, но не принимает null или пустую строку, выбрасывая IllegalArgumentException.
Контрольный finally: Напишите метод с try-catch-finally, в котором finally выполняется даже при наличии return внутри try.
 */
public class Main {
}
